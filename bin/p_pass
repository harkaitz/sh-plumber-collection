#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [URL]
#h:
#h: ... show   : Show variables.
#h: ... list   : List passwords.
##:
. p_show
p_pass() {
    local cmd="$1"
    shift
    case "${cmd}" in
        show)   p_pass_show_variables       ;;
        plumbs) p_pass_plumbs "$@"          ;;
        list)   p_pass_list                 ;;
        *)      p_pass_select "${cmd}" "$@" ;;
    esac
}
p_pass_show_variables() {
    printf '%-20s : %s\n' \
           PASSWORD_STORE_DIR "${PASSWORD_STORE_DIR}"
}
p_pass_calc_variables() {
    PASSWORD_STORE_DIR="${PASSWORD_STORE_DIR:-${HOME}/.password-store}"
}
## -----------------------------------------------------------------------------
p_pass_domain() {
    printf '%s\n' "${1}" | sed -n 's|^[^:]*://\([^/]*\).*|\1|p'
    if test -n "${P_PROG}"; then
        echo "${P_PROG}"
    fi
}
p_pass_list() {
    local dom="$1" pwd="`pwd`"
    if test -d "${PASSWORD_STORE_DIR}"; then
        cd "${PASSWORD_STORE_DIR}"
        find -L -type f -iregex '.*\.gpg' | grep "/${dom}/"
        cd "${pwd}"
    fi | sed 's|\.gpg||;s|^\./||'
}
p_pass_select() {
    for d in `p_pass_domain "${1}"`; do
        ## Search account.
        local a="`p_pass_list "${d}" | p_menu "${d}"`"
        if test ! -n "${a}"; then
            continue
        fi
        ## Get password.
        local p="`pass "${a}" | head -n 1`"
        if test ! -n "${p}"; then
            p_show "FAILED: pass didn't return a password."
            return 1
        fi
        ## Copy to clipboard.
        printf '%s' "${p}" | xclip -selection "clipboard"
        printf '%s' "${p}" | xclip -selection "primary"
        printf '%s' "${p}" | xclip -selection "secondary"
        return 0
    done
    p_show "FAILED: Didn't find a password for ${d}."
    return 1
}
p_pass_plumbs() {
    dom="`p_pass_domain "${1}"`"
    acc="`p_pass_list "${dom}"`"
    if test -n "${acc}"; then
        echo "Copy password to clipboard."
    fi
}


## -----------------------------------------------------------------------------
p_pass_calc_variables
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"p_pass";then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            p_pass "$@"
            ;;
    esac
fi
